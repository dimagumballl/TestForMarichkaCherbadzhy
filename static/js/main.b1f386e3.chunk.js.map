{"version":3,"sources":["App/head/Head.js","App/body/List/Note/Note.js","App/body/List/DB.js","App/body/List/List.js","App/body/Editor/Data.js","App/body/Editor/Text.js","App/body/Editor/Editor.js","App/body/Editor/Editorfornote.js","App/body/Body.js","App/App.js","serviceWorker.js","index.js"],"names":["Head","state","n","tapN","e","setState","target","value","className","to","this","type","onChange","Component","Note","Show","show","prevState","props","id","name","author","date","text","key","onClick","Notes","productsMap","DB","reduce","accObj","slot","List","match","undefined","params","map","alert","Data","Name","tapA","Author","Text","tap","Editor","Editorfornotes","Body","exact","path","render","Editorfornote","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b1f386e3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Head.css'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass Head extends Component{\r\n  state={\r\n    n:\"\"\r\n  }\r\n  tapN=(e)=>{\r\n        \r\n    this.setState({ \r\n        n:e.target.value\r\n });\r\n}\r\nrender(){\r\n  return (\r\n    <div className=\"Head\">\r\n      \r\n        <div className=\"SearchUnit\"> \r\n          <Link to={\"/f/\"+this.state.n}>\r\n            <button>by id</button>\r\n          </Link>\r\n          <input type='text' value={this.state.n} onChange={this.tapN}></input>\r\n        </div>\r\n        <Link to=\"/\"><button> get all notes</button></Link>\r\n        <Link to=\"/editor\"><button>create note</button></Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\n}\r\n\r\nexport default Head;\r\n","import React,{Component} from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport './Note.css';\r\n\r\n\r\nclass Note extends Component{\r\n    state={\r\n        Show:'Text',\r\n    }\r\n    show=()=>{\r\n  \r\n        if(this.state.Show=='Text')\r\n            this.setState((prevState)=>({ \r\n                Show:'TextV'\r\n         }));\r\n         if(this.state.Show=='TextV')\r\n            this.setState((prevState)=>({\r\n                Show:'Text'\r\n         }));\r\n    }\r\n    render(){\r\n        const{\r\n            id,\r\n            name,\r\n            author,\r\n            date,\r\n            text\r\n        }=this.props\r\n        return (\r\n            <div className=\"Note\" key={id}>\r\n                <div className=\"Name\">\r\n                    NAME: {name}\r\n                </div>\r\n                <div className=\"Author\">\r\n                    AUTHOR: {author}\r\n                </div>\r\n                <div className=\"Date\">\r\n                    DATE: {date}\r\n                </div>\r\n                <button className=\"button2\">\r\n                    Dalete\r\n                </button>\r\n                <Link to={'/editorfornotes/'+id}><button className=\"button2\">\r\n                    Chainge\r\n                </button></Link>\r\n                <button onClick={this.show} className=\"Notebutton\">\r\n                    SHOW\r\n                </button>\r\n                <div className={this.state.Show}>\r\n                    TEXT: {text}\r\n                    <button onClick={this.show}>\r\n                        CLOSE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n  \r\n}\r\n\r\nexport default Note;\r\n","const Notes=[\r\n    {\r\n        id:1,\r\n        name:\"ДУТ\",\r\n        author:\"дут\",\r\n        text:\"Шановні студенти! Для отримання логіна та пароля звертайтесь до методистів вашого деканату або до каб. № 128.\",\r\n        date:\"12.01.2020\"\r\n    },\r\n    {\r\n        id:2,\r\n        name:\"Дистанційне\",\r\n        author:\"дут\",\r\n        text:\"Шановні студенти! Для отримання логіна та пароля звертайтесь до методистів вашого деканату або до каб. № 128.\",\r\n        date:\"12.01.2020\"\r\n    },\r\n    {\r\n        id:3,\r\n        name:\"навчання\",\r\n        author:\"дут\",\r\n        text:\"Шановні студенти! Для отримання логіна та пароля звертайтесь до методистів вашого деканату або до каб. № 128.\",\r\n        date:\"12.01.2020\"\r\n    },\r\n    {\r\n        id:4,\r\n        name:\"Дистанційне навчання ДУТ\",\r\n        author:\"дут\",\r\n        text:\"Шановні студенти! Для отримання логіна та пароля звертайтесь до методистів вашого деканату або до каб. № 128.\",\r\n        date:\"12.01.2020\"\r\n    },\r\n    {\r\n        id:5,\r\n        name:\"//////\",\r\n        author:\"дут\",\r\n        text:\"Шановні студенти! Для отримання логіна та пароля звертайтесь до методистів вашого деканату або до каб. № 128.\",\r\n        date:\"12.01.2020\"\r\n    },\r\n    {\r\n        id:6,\r\n        name:\"Докладніше про ВНЗ\",\r\n        author:\"дут\",\r\n        text:\"Обираючи спеціальність, усі орієнтуються на її актуальність, дохід та подальший розвиток. Ми з Вами живемо в інформаційному суспільстві, де без мобільного телефона, комп’ютера чи будь-якого іншого «девайсу» більшість молоді не може навіть уявити свого існування.Незважаючи на кризу, галузь телекомунікацій та інформатизації має найвищі темпи зростання!На сьогоднішній день на ринку праці користується надзвичайним попитом фахівець ІТ технологій. Базовим закладом для якісної підготовки висококваліфікованих фахівців сфери ІТ-технологій є Державний університет телекомунікацій.Ні для кого не секрет, що фахівці напрямку інформаційних технологій, телекомунікацій, захисту інформації та менеджменту користуються надзвичайним попитом на ринку праці і, при цьому, отримують одну із найвищих заробітних плат!\",\r\n        date:\"12.01.2020\"\r\n    },\r\n]\r\nexport default Notes","import React from 'react'\r\nimport Note from './Note/Note'\r\nimport './List.css'\r\nimport DB from './DB'\r\n\r\nconst productsMap = DB.reduce((accObj,slot)=>({\r\n  ...accObj,\r\n  [slot.id]:slot\r\n}),{})\r\nconst List=(match)=> {\r\n  return (\r\n    <div className=\"List\">\r\n      \r\n      {\r\n\r\n      match.match.params.id==undefined?   \r\n                    DB.map(({\r\n                        id,\r\n                        name,\r\n                        author,\r\n                        date,\r\n                        text\r\n                        \r\n                    })=>(\r\n                            <Note\r\n                                id={id}\r\n                                name={name}\r\n                                author={author}\r\n                                text={text}\r\n                                date={date}\r\n                            />\r\n\r\n                    )):\r\n                    productsMap[match.match.params.id]==undefined?alert(\"undefined\"):\r\n                  <Note\r\n                    id={match.match.params.id}\r\n                    name={productsMap[match.match.params.id].name}\r\n                    author={productsMap[match.match.params.id].author}\r\n                    text={productsMap[match.match.params.id].text}\r\n                    date={productsMap[match.match.params.id].date}\r\n                />\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react'\r\nimport './Editor.css'\r\nimport DB from '../List/DB'\r\nconst productsMap = DB.reduce((accObj,slot)=>({\r\n  ...accObj,\r\n  [slot.id]:slot\r\n}),{})\r\n\r\n\r\nclass Data extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    props.id==undefined?this.state={\r\n      Name:\"\",\r\n        Author:\"\"\r\n  }:this.state={\r\n    Name:productsMap[props.id].name,\r\n    Author:productsMap[props.id].author,\r\n  }\r\n  }\r\n    \r\n    tapN=(e)=>{\r\n        \r\n        this.setState({ \r\n            Name:e.target.value\r\n     });\r\n    }\r\n    tapA=(e)=>{\r\n        \r\n        this.setState({ \r\n            Author:e.target.value\r\n     });\r\n    }\r\n  render(){\r\n    return (\r\n      <div className=\"Data\">\r\n          Name\r\n          <input type='text' value={this.state.Name} onChange={this.tapN}></input>\r\n          <br/>\r\n          Author\r\n          <input type='text' value={this.state.Author} onChange={this.tapA}></input>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Data;\r\n","import React, { Component } from 'react'\r\nimport './Editor.css'\r\nimport Data from './Data'\r\nimport DB from '../List/DB'\r\nconst productsMap = DB.reduce((accObj,slot)=>({\r\n  ...accObj,\r\n  [slot.id]:slot\r\n}),{})\r\n\r\nclass Text extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    props.id==undefined?this.state={\r\n      Text:\"\"\r\n  }:this.state={\r\n    Text:productsMap[props.id].text\r\n  }\r\n  }\r\n  \r\n    \r\n    tap=(e)=>{\r\n        \r\n        this.setState({ \r\n            Text:e.target.value\r\n     });\r\n    }\r\n    \r\n    \r\n  render(){\r\n    const{\r\n      id,\r\n  }=this.props\r\n  \r\n    return (\r\n      <div className=\"TextT\"> \r\n            <div className=\"forT\">\r\n                <textarea type='text' value={this.state.Text} onChange={this.tap}></textarea>\r\n            </div>\r\n            <Data\r\n            id={id}\r\n            />\r\n            <button className=\"button1\">SAVE</button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Text;\r\n","import React,{Component} from 'react';\r\nimport Text from './Text'\r\n\r\nimport './Editor.css'\r\n\r\n\r\nconst Editor =()=>{\r\n    \r\n        \r\n   \r\n        return (\r\n            <div className=\"Editor\">\r\n                \r\n                <Text/>\r\n                \r\n                \r\n            </div>\r\n          );\r\n    \r\n  \r\n}\r\n\r\nexport default Editor;\r\n","import React,{Component} from 'react';\r\nimport Text from './Text'\r\n\r\nimport './Editor.css'\r\n\r\n\r\nconst Editorfornotes =(match)=>{\r\n    \r\n        \r\n   \r\n        return (\r\n            <div className=\"Editor\">\r\n                \r\n                \r\n                    <Text\r\n                    id={match.match.params.id}\r\n                    />\r\n                \r\n                \r\n            </div>\r\n          );\r\n    \r\n  \r\n}\r\n\r\nexport default Editorfornotes;\r\n","import React from 'react';\r\nimport{Route} from \"react-router-dom\"\r\nimport './Body.css'\r\nimport List from './List/List'\r\nimport Editor from './Editor/Editor'\r\nimport Editorfornote from './Editor/Editorfornote'\r\n\r\n\r\nconst Body=()=> {\r\n  return (\r\n    <div className=\"Body\">\r\n        \r\n        <Route exact path=\"/\" render={List}/>\r\n        <Route path=\"/f/:id\" render={List}/>\r\n        <Route path=\"/editor\" render={Editor}/>\r\n        <Route path=\"/editorfornotes/:id\" render={Editorfornote}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport Head from './head/Head'\nimport Body from './body/Body'\n\nclass App extends Component{\n  render(){\n    return (\n      <div>\n          <Head />\n          <Body />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}